import sys
import time
import random

name_key = 'NAME'
com_key = 'COMMENT'
type_key = 'TYPE'
dim_key = 'DIMENSION'
edge_key = 'EDGE_WEIGHT_TYPE'
coord_key = 'NODE_COORD_SECTION'

max_coord = 1e21

def write_tsp(tsp_directory, name, comment, type, dimension, edge_weight_type, node_coords):
    tsp_file = f'{tsp_directory}/{name}.tsp'
    try:
        f = open(tsp_file, 'w+')
    except:
        print(f'Error: directory {tsp_directory} does not exist')
        sys.exit(1)

    f.write(f'NAME: {name}\n')
    f.write(f'COMMENT: {comment}\n')
    f.write(f'TYPE: {type}\n')
    f.write(f'DIMENSION: {dimension}\n')
    f.write(f'EDGE_WEIGHT_TYPE: {edge_weight_type}\n')
    f.write(f'NODE_COORD_SECTION\n')
    for node_coord in node_coords:
        f.write(f'{node_coord[0]} {node_coord[1]} {node_coord[2]}\n')
    f.write(f'EOF\n')
    f.close()

def generate_tsp(dimension, tsp_directory):
    name = f'random{dimension}_{time.time().as_integer_ratio()[0]}'
    comment = f'generated by tsp_random.py'
    type = 'TSP'
    edge_weight_type = 'EUC_2D'

    node_coords = []
    for i in range(dimension):
        node_coords.append((i + 1, round(random.uniform(0, max_coord), 2), round(random.uniform(1, max_coord), 2)))

    tsp = dict()
    tsp[name_key] = name
    tsp[com_key] = comment
    tsp[type_key] = type
    tsp[dim_key] = dimension
    tsp[edge_key] = edge_weight_type
    tsp[coord_key] = node_coords

    return tsp

def random_tsp(dimension, tsp_directory):
    tsp = generate_tsp(dimension, tsp_directory)
    write_tsp(tsp_directory, tsp[name_key], tsp[com_key], tsp[type_key], tsp[dim_key], tsp[edge_key], tsp[coord_key])
    return tsp

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print('Usage: ./tsp_random.py [dimension] <tsp_directory>')
        sys.exit(1)

    dimension = int(sys.argv[1])

    tsp_directory = '.'
    if len(sys.argv) > 2:
        tsp_directory = sys.argv[2]

    tsp = random_tsp(dimension, tsp_directory)

    print(f'Head to {tsp_directory}/{tsp[name_key]}.tsp')
